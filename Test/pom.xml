<?xml version="1.0" encoding="UTF-8"?>
<!--project 标签：根标签，表示对当前工程进行配置、管理-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--modelVersion 标签：从Maven 2开始就固定是 4.0.0-->
    <!--代表当前pom.xml所采用的标签结构-->
    <modelVersion>4.0.0</modelVersion>

    <!-- 使用parent标签指定当前工程的父工程 -->
    <parent>
        <!-- 父工程的坐标 -->
        <groupId>com.study</groupId>
        <artifactId>maven-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../yuncai/maven-parent/pom.xml</relativePath>
    </parent>

    <!-- 子工程的坐标 -->
    <!-- 如果子工程坐标中的groupId和version与父工程一致，那么可以省略 -->
    <!-- <groupId>Test</groupId> -->
    <!-- <version>1.0-SNAPSHOT</version> -->

    <!---->
    <!--坐标信息-->
    <!--groupId 标签：坐标向量之一:代表公司或组织开发的某一个项目-->
    <groupId>com.study</groupId>
    <!-- artifactId 标签:坐标向量之一;代表项目下的某一个模块-->
    <artifactId>Test</artifactId>
    <!-- version标签:坐标向量之一;代表当前模块的版本-->
    <version>1.0-SNAPSHOT</version>
    <!-- packaging 标签:打包方式-->
    <!--取值jar:生成jar包，说明这是一个Java工程。-->
    <!--取值war:生成war包，说明这是一个web工程。-->
    <!--取值pom:说明这个工程是用来管理其它工程的工程。-->


        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>8</source>
                        <target>8</target>
                    </configuration>
                </plugin>
            </plugins>
        </build>

    <!-- 在 Maven 中定义属性值-->
    <properties>
        <!--在构建过程中读取源码时使用的字符集-->
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>
    <!-- dependencies标签:配置具体依赖信息，可以包含多个dependency子标签-->
   <dependencies>
       <dependency>
           <groupId>com.study</groupId>
           <artifactId>mavenTest</artifactId>
           <version>1.0-SNAPSHOT</version>
           <!-- 使用excludes标签配置依赖的排除  -->
           <exclusions>
               <!-- 在exclude标签中配置一个具体的排除 -->
               <exclusion>
                   <!-- 指定要排除的依赖的坐标（不需要写version） -->
                   <groupId>commons-logging</groupId>
                   <artifactId>commons-logging</artifactId>
               </exclusion>
           </exclusions>
       </dependency>
       <!-- dependency标签:配置一个具体的依赖信息-->
       <dependency>
           <!--坐标信息:导入哪个jar 包，就配置它的坐标信息即可-->
           <groupId>com.alibaba</groupId>
           <artifactId>fastjson</artifactId>
           <version>1.2.83</version>
       </dependency>
       <dependency>
           <groupId>commons-codec</groupId>
           <artifactId>commons-codec</artifactId>
           <version>1.10</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpclient</artifactId>
           <version>4.5</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpmime</artifactId>
           <version>4.5.13</version>
       </dependency>
       <dependency>
           <groupId>org.bouncycastle</groupId>
           <artifactId>bcprov-jdk16</artifactId>
           <version>1.46</version>
       </dependency>
       <dependency>
           <groupId>commons-beanutils</groupId>
           <artifactId>commons-beanutils</artifactId>
           <version>1.7.0</version>
       </dependency>
       <dependency>
           <groupId>commons-collections</groupId>
           <artifactId>commons-collections</artifactId>
           <version>3.2.2</version>
       </dependency>
       <dependency>
           <groupId>commons-lang</groupId>
           <artifactId>commons-lang</artifactId>
           <version>2.6</version>
       </dependency>
       <dependency>
           <groupId>commons-logging</groupId>
           <artifactId>commons-logging</artifactId>
           <version>1.2</version>
       </dependency>
       <dependency>
           <groupId>net.sf.ezmorph</groupId>
           <artifactId>ezmorph</artifactId>
           <version>1.0.6</version>
       </dependency>
       <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>javax.servlet-api</artifactId>
           <version>3.1.0</version>
           <!-- 只在编译和测试的时候用 -->
           <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
       <!-- 子工程引用父工程中的依赖信息时，可以把版本号去掉。  -->
       <!-- 把版本号去掉就表示子工程中这个依赖的版本由父工程决定。 -->
       <!-- 具体来说是由父工程的dependencyManagement来决定。 -->
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-core</artifactId>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-beans</artifactId>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-context</artifactId>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-expression</artifactId>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-aop</artifactId>
       </dependency>
    </dependencies>
</project>